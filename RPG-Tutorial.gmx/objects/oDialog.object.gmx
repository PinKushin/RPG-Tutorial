<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sDialog</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise the Dialog object
Text = noone;
TextVisible = "";
TextPage = 0;
TextCount = 0;
Speed = 0.5;
DisplayScale = display_get_gui_width () / view_wview[0];
Width = sprite_width * DisplayScale;
Margin = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the Dialog

//Get the last space
if string_char_at (Text[TextPage], TextCount) == " "
{
    LastSpace = TextCount
}

//Add smart returns
var TextWords = StringCopyWords (Text[TextPage], 1, TextCount);
if string_width (TextWords) &gt;= Width - (Margin * 2)
{
    //Remove the space
    Text[TextPage] = string_delete (Text[TextPage], LastSpace, 1)
    //Add a return
    Text[TextPage] = string_insert ("#", Text[TextPage], LastSpace)
}
//Get the Visible Text
TextVisible = string_copy (Text[TextPage], 0, TextCount);

//Update the Text location
var XX = (x - view_xview[0]) * DisplayScale;
var YY = (y - view_yview[0]) * DisplayScale;

//Draw the Text
draw_text_ext (XX + Margin, YY + Margin, TextVisible, -1, Width - (Margin * 2));

//Add to the count
TextCount += Speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
