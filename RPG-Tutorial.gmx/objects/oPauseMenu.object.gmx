<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise Pause Menu
Title = "Game Paused"

Option[0] = "Return"
Option[1] = "Save"
Option[2] = "Load"
Option[3] = "Quit"

//Menu Index
MenuIndex = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu Alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control the Menu
if alarm[0] &lt;= 0
{
    if oInput.DownKey || oInput.Yaxis &gt; 0.5
    {
        if MenuIndex &lt; array_length_1d (Option) - 1
        {
            MenuIndex++
        }
        else
        {
            MenuIndex = 0
        }
        alarm[0] = room_speed / 6
    }
    
    if oInput.UpKey || oInput.Yaxis &lt; -0.5
    {
        if MenuIndex &gt; 0 
        {
            MenuIndex--
        }
        else
        {
            MenuIndex = array_length_1d (Option) - 1
        }
        alarm[0] = room_speed / 6
    }
    if oInput.DashKey
    {
        switch (MenuIndex)
        {
            case 0:
                 room_goto (oPlayerStats.PrevRoom)
                 break;
                 
            case 1:
                 SaveGame ()
                 break;
            
            case 2:
                 LoadGame ()
                 break;
            
            case 3:
                 game_end ()
                 break;
            
            default:
                    break;
        }
        oInput.DashKey = false
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the Menu
var XX = display_get_gui_width () / 2;
var YY = display_get_gui_height () / 2;
draw_set_halign (fa_center)

draw_text (XX, YY - 64, Title)

for (var i = 0; i &lt;= array_length_1d (Option) - 1; i++)
{
    draw_set_color (c_gray)
    if i == MenuIndex
    {
        draw_set_color (c_white)
    }
    draw_text (XX, YY + (i * 32), Option[i])
}
draw_set_color (c_white)
draw_set_halign (fa_left)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
